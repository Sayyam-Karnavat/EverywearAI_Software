pyinstaller --onefile --noconsole --add-data "icon.png;." app.py





( IF the icon is not getting displayed after converting and adding it icon into exe using --add-data)
Key Changes Explained
Added resource_path Function:
This function checks if the application is running as a bundled executable (sys._MEIPASS exists) or as a script.
When bundled, it uses sys._MEIPASS to locate icon.png in the temporary extraction directory.
When running as a script, it uses the directory of the script file (__file__) to find icon.png.
This ensures the icon is found in both development and bundled environments.

Example

import sys
import os

def resource_path(relative_path):
    """Get the absolute path to a resource, works for development and PyInstaller bundles."""
    if hasattr(sys, '_MEIPASS'):
        # Running as a bundled executable (PyInstaller)
        return os.path.join(sys._MEIPASS, relative_path)
    else:
        # Running as a script
        return os.path.join(os.path.dirname(__file__), relative_path)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    app.setQuitOnLastWindowClosed(False)
    
    # Use resource_path to dynamically resolve the path to chatgpt.png
    icon_path = resource_path("chatgpt.png")  # Ensure chatgpt.png is in the same directory as the script
    floating_icon = FloatingIcon(icon_path)
    floating_icon.show()
    
    sys.exit(app.exec())